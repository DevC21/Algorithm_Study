#include<bits/stdc++.h>
using namespace std;

int n, cnt;
int D[100005];

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n;

    for(int i = 1; i <= 100000; i++){
        // 1. D[i]은 어떤 자연수 i를 제곱수의 합으로 나타낼 때 항의 최소 개수를 말한다.
        // 2. 처음에는 모든 수들을 1²의 합으로 나타낸다고 생각하고 D[i] = i 으로 초기화한다.
        D[i] = i;

        // 3. 어떤 자연수 i에 대해, j = 1부터 시작하면서 i보다 작은 제곱수를 가장 작은 것부터 뺀다.
        // 3-1. 빼서 나온 그 수(i - 제곱수)를 제곱수들의 합으로 나타낼 때의 항의 최소 개수는 D[i - 제곱수]이며, 
        // 여기에 제곱수 1개 항을 추가로 붙여줬을 때 총 항의 갯수는 D[i - 제곱수] + 1 이다.
        // (예) 11에서 3²을 뺐을 때 D[11 - 3²] = D[2] 이며, 여기에 제곱수 1개인 3²을 추가로 더해주는 것.
        for(int j = 1; j * j <= i; j++){
            // 4. D[i - 제곱수] + 1과 기존의 D[i]과 비교해 더 작은 값을 D[i]에 대입한다.
            D[i] = min(D[i], D[i - j * j] + 1);
        }
    }

    cout << D[n];

}